# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Streamlit Inc.
# This file is distributed under the same license as the Streamlit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Streamlit 0.81\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-21 13:53+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorial/create_a_data_explorer_app.md:1
msgid "Create a data explorer app"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:3
msgid ""
"If you've made it this far, chances are you've installed Streamlit and "
"run through the basics in our get started guide. If not, now is a good "
"time to take a look."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:8
msgid ""
"In this tutorial, you're going to use Streamlit's core features to create"
" an interactive app; exploring a public Uber dataset for pickups and "
"drop-offs in New York City. When you're finished, you'll know how to "
"fetch and cache data, draw charts, plot information on a map, and use "
"interactive widgets, like a slider, to filter results."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:2
msgid ""
"If you'd like to skip ahead and see everything at once, the `complete "
"script is available below <#let-s-put-it-all-together>`_."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:20
msgid "Create an app"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:22
msgid ""
"The first step is to create a new Python script. Let's call it "
"uber_pickups.py."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:24
msgid ""
"Open uber_pickups.py in your favorite IDE or text editor, then add these "
"lines:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:33
msgid "Every good app has a title, so let's add one:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:39
msgid "Now it's time to run Streamlit from the command line:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:45
msgid "As usual, the app should automatically open in a new tab in your browser."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:48
msgid "Fetch some data"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:50
msgid ""
"Now that you have an app, the next thing you'll need to do is fetch the "
"Uber dataset for pickups and drop-offs in New York City."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:53
msgid ""
"Let's start by writing a function to load the data. Add this code to your"
" script:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:69
msgid ""
"You'll notice that load_data is a plain old function that downloads some "
"data, puts it in a Pandas dataframe, and converts the date column from "
"text to datetime. The function accepts a single parameter (nrows), which "
"specifies the number of rows that you want to load into the dataframe."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:74
msgid ""
"Now let's test the function and review the output. Below your function, "
"add these lines:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:86
msgid ""
"You'll see a few buttons in the upper-right corner of your app asking if "
"you'd like to rerun the app. Choose Always rerun, and you'll see your "
"changes automatically each time you save."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:90
msgid "Ok, that's underwhelming..."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:92
msgid ""
"It turns out that it takes a long time to download data, and load 10,000 "
"lines into a dataframe. Converting the date column into datetime isn’t a "
"quick job either. You don’t want to reload the data each time the app is "
"updated – luckily Streamlit allows you to cache the data."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:97
msgid "Effortless caching"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:99
msgid "Try adding @st.cache before the load_data declaration:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:106
msgid ""
"Then save the script, and Streamlit will automatically rerun your app. "
"Since this is the first time you’re running the script with @st.cache, "
"you won't see anything change. Let’s tweak your file a little bit more so"
" that you can see the power of caching."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:111
msgid "Replace the line data_load_state.text('Loading data...done!') with this:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:117
msgid ""
"Now save. See how the line you added appeared immediately? If you take a "
"step back for a second, this is actually quite amazing. Something magical"
" is happening behind the scenes, and it only takes one line of code to "
"activate it."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:122
msgid "How's it work?"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:124
msgid "Let's take a few minutes to discuss how @st.cache actually works."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:126
msgid ""
"When you mark a function with Streamlit’s cache annotation, it tells "
"Streamlit that whenever the function is called that it should check three"
" things:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:129
msgid "The actual bytecode that makes up the body of the function"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:130
msgid "Code, variables, and files that the function depends on"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:131
msgid "The input parameters that you called the function with"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:133
msgid ""
"If this is the first time Streamlit has seen these items, with these "
"exact values, and in this exact combination, it runs the function and "
"stores the result in a local cache. The next time the function is called,"
" if the three values haven't changed, then Streamlit knows it can skip "
"executing the function altogether. Instead, it reads the output from the "
"local cache and passes it on to the caller -- like magic."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:140
msgid ""
"\"But, wait a second,\" you’re saying to yourself, \"this sounds too good"
" to be true. What are the limitations of all this awesomesauce?\""
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:143
msgid "Well, there are a few:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:145
msgid ""
"Streamlit will only check for changes within the current working "
"directory. If you upgrade a Python library, Streamlit's cache will only "
"notice this if that library is installed inside your working directory."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:148
msgid ""
"If your function is not deterministic (that is, its output depends on "
"random numbers), or if it pulls data from an external time-varying source"
" (for example, a live stock market ticker service) the cached value will "
"be none-the-wiser."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:152
msgid ""
"Lastly, you should not mutate the output of a cached function since "
"cached values are stored by reference (for performance reasons and to be "
"able to support libraries such as TensorFlow). Note that, here, Streamlit"
" is smart enough to detect these mutations and show a loud warning "
"explaining how to fix the problem."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:158
msgid ""
"While these limitations are important to keep in mind, they tend not to "
"be an issue a surprising amount of the time. Those times, this cache is "
"really transformational."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:2
msgid ""
"Whenever you have a long-running computation in your code, consider "
"refactoring it so you can use `@st.cache`, if possible."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:168
msgid ""
"Now that you know how caching with Streamlit works, let’s get back to the"
" Uber pickup data."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:171
msgid "Inspect the raw data"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:173
msgid ""
"It's always a good idea to take a look at the raw data you're working "
"with before you start working with it. Let's add a subheader and a "
"printout of the raw data to the app:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:182
msgid ""
"In the get started guide you learned that st.write will render almost "
"anything you pass to it. In this case, you're passing in a dataframe and "
"it's rendering as an interactive table."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:187
msgid ""
"st.write tries to do the right thing based on the data type of the input."
" If it isn't doing what you expect you can use a specialized command like"
" st.dataframe instead. For a full list, see API reference."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:192
msgid "Draw a histogram"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:194
msgid ""
"Now that you've had a chance to take a look at the dataset and observe "
"what's available, let's take things a step further and draw a histogram "
"to see what Uber's busiest hours are in New York City."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:198
msgid "To start, let's add a subheader just below the raw data section:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:204
msgid ""
"Use NumPy to generate a histogram that breaks down pickup times binned by"
" hour:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:212
msgid "Now, let's use Streamlit's st.bar_chart() method to draw this histogram."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:220
msgid ""
"Save your script. This histogram should show up in your app right away. "
"After a quick review, it looks like the busiest time is 17:00 (5 P.M.)."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:223
msgid ""
"To draw this diagram we used Streamlit's native bar_chart() method, but "
"it's important to know that Streamlit supports more complex charting "
"libraries like Altair, Bokeh, Plotly, Matplotlib and more. For a full "
"list, see supported charting libraries."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:228
msgid "Plot data on a map"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:230
msgid ""
"Using a histogram with Uber's dataset helped us determine what the "
"busiest times are for pickups, but what if we wanted to figure out where "
"pickups were concentrated throughout the city. While you could use a bar "
"chart to show this data, it wouldn't be easy to interpret unless you were"
" intimately familiar with latitudinal and longitudinal coordinates in the"
" city. To show pickup concentration, let's use Streamlit st.map() "
"function to overlay the data on a map of New York City."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:238
msgid "Add a subheader for the section:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:244
msgid "Use the st.map() function to plot the data:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:250
msgid ""
"Save your script. The map is fully interactive. Give it a try by panning "
"or zooming in a bit."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:253
msgid ""
"After drawing your histogram, you determined that the busiest hour for "
"Uber pickups was 17:00. Let's redraw the map to show the concentration of"
" pickups at 17:00."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:257
msgid "Locate the following code snippet:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:264
msgid "Replace it with:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:273
msgid "You should see the data update instantly."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:275
msgid ""
"To draw this map we used the st.map function that's built into Streamlit,"
" but if you'd like to visualize complex map data, we encourage you to "
"take a look at the st.pydeck_chart."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:279
msgid "Filter results with a slider"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:281
msgid ""
"In the last section, when you drew the map, the time used to filter "
"results was hardcoded into the script, but what if we wanted to let a "
"reader dynamically filter the data in real time? Using Streamlit's "
"widgets you can. Let's add a slider to the app with the st.slider() "
"method."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:286
msgid "Locate hour_to_filter and replace it with this code snippet:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:292
msgid "Use the slider and watch the map update in real time."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:294
msgid "Use a button to toggle data"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:296
msgid ""
"Sliders are just one way to dynamically change the composition of your "
"app. Let's use the st.checkbox function to add a checkbox to your app. "
"We'll use this checkbox to show/hide the raw data table at the top of "
"your app."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:301
msgid "Locate these lines:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:308
msgid "Replace these lines with the following code:"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:316
msgid ""
"We're sure you've got your own ideas. When you're done with this "
"tutorial, check out all the widgets that Streamlit exposes in our API "
"reference."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:320
msgid "Let's put it all together"
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:322
msgid ""
"That's it, you've made it to the end. Here's the complete script for our "
"interactive app."
msgstr ""

#: ../../tutorial/create_a_data_explorer_app.md:2
msgid ""
"If you've skipped ahead, after you've created your script, the command to"
" run Streamlit is `streamlit run [app name]`."
msgstr ""

