# # https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions#adding-an-action-from-the-same-repository
# runs:
#   using: composite
#   steps:
#     - name: "Install NVM, Node.js, and Yarn"
#       run: |
        # if [ ! -d ~/.nvm ] ; then
        #   cd ..
        #   echo "{$HOME}" >> $GITHUB_PATH
        #   touch $HOME/.bash_profile
        #   echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_PATH
        #   mkdir $NVM_DIR
        #   # install nodejs via nvm
        #   curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | bash
        #   echo "source $NVM_DIR/nvm.sh --install" >> "$HOME/.bash_profile"
        #   cd -
        #   source $HOME/.bash_profile
        #   nvm install --lts=fermium
        # fi
        # # install yarn
        # npm install -g yarn
        # if [ ! -d frontend/node_modules ] ; then
        #   source "$HOME/.nvm/nvm.sh"
        #   make react-init
        # fi
#       shell: bash
#     - name: Install pyodbc dependencies
#       run: |
#         ${SUDO} apt-get install -y unixodbc-dev
#       shell: bash
#     - name: Install graphviz dependencies
#       run: |
#         ${SUDO} apt update
#         ${SUDO} apt-get install -y libgvc6
#       shell: bash
#     - name: create virtualenv
#       run: |
#         echo 'Checking for virtualenv'
#         if [ ! -d venv ] ; then
#           # The virtualenv was NOT restored from cache. Create a new one.
#           python -m venv venv
#           source venv/bin/activate
#           pip install --upgrade pip
#           make setup
#           make pipenv-install
#           deactivate
#         else
#           # The virtualenv WAS restored from cache. Don't create a new one.
#           echo 'Virtualenv already exists, not creating'
#         fi

#       shell: bash
#     - name: generate_protobufs
#       run: |
#         # install protobuf v3
#         ${SUDO} apt update
#         ${SUDO} apt-get install -y gnupg
#         ${SUDO} pip install mypy-protobuf
#         echo "deb http://ppa.launchpad.net/maarten-fonville/protobuf/ubuntu trusty main" | ${SUDO} tee /etc/apt/sources.list.d/protobuf.list
#         ${SUDO} apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4DEA8909DC6A13A3
#         ${SUDO} apt update
#         ${SUDO} apt-get install -y protobuf-compiler

#         # Generate protobufs
#         make protobuf
#       shell: bash
#     - name: Test virtual env
#       run: activate venv
#       shell: bash

# https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions#adding-an-action-from-the-same-repository
runs:
  using: composite
  steps:
    - name: "Install NVM, Node.js, and Yarn"
      run: |
        if [ ! -d ~/.nvm ] ; then
          cd ..
          echo $HOME
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          echo "source $NVM_DIR/nvm.sh --install" >> "$HOME/.bash_profile"
          cd -
          source $HOME/.bash_profile
          nvm install --lts=fermium
        fi
        # install yarn
        npm install -g yarn
        if [ ! -d frontend/node_modules ] ; then
          source "$HOME/.nvm/nvm.sh"
          make react-init
        fi
      shell: bash
    - name: Install pyodbc dependencies
      run: |
        ${SUDO} apt-get install -y unixodbc-dev
      shell: bash
    - name: Install graphviz dependencies
      run: |
        ${SUDO} apt update
        ${SUDO} apt-get install -y libgvc6
      shell: bash
    - name: create virtualenv
      run: |
        echo 'Checking for virtualenv'
        if [ ! -d venv ] ; then
          # The virtualenv was NOT restored from cache. Create a new one.
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          make setup
          make pipenv-install
          deactivate
        else
          # The virtualenv WAS restored from cache. Don't create a new one.
          echo 'Virtualenv already exists, not creating'
        fi
      shell: bash
    - name: generate_protobufs
      run: |
        # install protobuf v3
        ${SUDO} apt update
        ${SUDO} apt-get install -y gnupg
        ${SUDO} pip install mypy-protobuf
        echo "deb http://ppa.launchpad.net/maarten-fonville/protobuf/ubuntu trusty main" | ${SUDO} tee /etc/apt/sources.list.d/protobuf.list
        ${SUDO} apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4DEA8909DC6A13A3
        ${SUDO} apt update
        ${SUDO} apt-get install -y protobuf-compiler
        # Generate protobufs
        make protobuf
      shell: bash
    - name: Test virtual env
      run: activate venv
      shell: bash