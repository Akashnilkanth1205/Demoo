# https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions#adding-an-action-from-the-same-repository
runs:
  using: composite
  steps:
    - name: "Install NVM, Node.js, and Yarn"
      run: |
        if [ ! -d ~/.nvm ] ; then
          # install nodejs via nvm
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | bash
          source "$HOME/.nvm/nvm.sh"
          nvm install --lts=gallium
          # install yarn
          npm install -g yarn
        fi
        if [ ! -d frontend/node_modules ] ; then
          source "$HOME/.nvm/nvm.sh"
          make react-init
        fi
      shell: bash
    - name: Install pyodbc dependencies
      run: |
        ${SUDO} apt-get install -y unixodbc-dev
      shell: bash
    - name: Install graphviz dependencies
      run: |
        ${SUDO} apt update
        ${SUDO} apt-get install -y libgvc6
      shell: bash
    - name: change to lib dir
      run: cd lib; ls
      shell: bash
    - name: restore or create a python virtualenv
      uses: syphar/restore-virtualenv@v1.2
      with:
        requirement_files: Pipfile
    - name: cd back
      run: cd ..
      shell: bash
    - name: generate_protobufs
      run: |
        # install protobuf v3
        ${SUDO} apt update
        ${SUDO} apt-get install -y gnupg
        echo "deb http://ppa.launchpad.net/maarten-fonville/protobuf/ubuntu trusty main" | ${SUDO} tee /etc/apt/sources.list.d/protobuf.list
        ${SUDO} apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4DEA8909DC6A13A3
        ${SUDO} apt update
        ${SUDO} apt-get install -y protobuf-compiler

        # Generate protobufs
        make protobuf
      shell: bash
    - name: Test virtual env
      run: activate venv
      shell: bash