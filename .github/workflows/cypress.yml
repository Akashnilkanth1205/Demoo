name: Cypress Tests

on: [push]

env:
  total-runners: 20
jobs:
  # list-spec-files:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     # matrix: ${{ steps.set-matrix.outputs.matrix }}
  #     matrix:
  #       specs: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]


  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: List all
  #       id: set-matrix
  #       run: | 
  #         TEMP=$(ls ./e2e/specs/${{ matrix.specs }}/*.spec.js)
  #         echo ./e2e/specs/${{ matrix.specs }}/*.spec.js
  #         echo "ls ./e2e/specs/${{ matrix.specs }}/*.spec.js"


  # build:

  #   runs-on: ubuntu-latest

  #   env:
  #     SUDO: 'sudo'
  #     BASH_ENV: $HOME/.bash_profile

    # steps:
    #   - name: Checkout Streamlit code
    #     uses: actions/checkout@v3
    #   - name: Set up Python 3.7.12
    #     uses: actions/setup-python@v4
    #     with:
    #         python-version: "3.7.12"
    #   - uses: ./.github/actions/update_submodules
    #   - uses: ./.github/actions/pre_make
    #   - uses: ./.github/actions/make_init
    #   - name: Run make develop
    #     run: |
    #       make develop
    #     shell: bash -l -v -e -u -o pipefail {0}
    #   - name: Install Cypress dependencies
    #     run: |
    #       ${SUDO} apt-get install -y xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 jq curl
    #     shell: bash -l -v -e -u -o pipefail {0}
    #   # Revisit artifact saving
    #   # - name: Save Cypress artifacts
    #   #   uses: actions/upload-artifact@v2
    #   #   with:
    #   #     name: build
    #   #     if-no-files-found: error
    #   #     path: build
    #   - name: Init config
    #     run: |
    #       mkdir ~/.streamlit
    #       MAPBOX_TOKEN=$(curl -sS https://data.streamlit.io/tokens.json | jq -r '.["mapbox-localhost"]')
    #       echo '[mapbox]' >  ~/.streamlit/config.toml
    #       echo 'token = "'$MAPBOX_TOKEN'"' >> ~/.streamlit/config.toml
    #     shell: bash -l -v -e -u -o pipefail {0}
    #   - name: Init credentials
    #     run: |
    #       echo '[general]' >  ~/.streamlit/credentials.toml
    #       echo 'email = "test@streamlit.io"' >> ~/.streamlit/credentials.toml
    #     shell: bash -l -v -e -u -o pipefail {0}

  runner-indexes:
    runs-on: ubuntu-latest
    name: Generate runner indexes
    outputs:
      json: ${{ steps.generate-index-list.outputs.json }}
    steps:
      - id: generate-index-list
        run: |
          MAX_INDEX=$((${{ env.total-runners }}-1))
          INDEX_LIST=$(seq 0 ${MAX_INDEX})
          INDEX_JSON=$(jq --null-input --compact-output '. |= [inputs]' <<< ${INDEX_LIST})
          echo "::set-output name=json::${INDEX_JSON}"

  e2e_tests:
    env:
      SUDO: 'sudo'
      BASH_ENV: $HOME/.bash_profile
    runs-on: ubuntu-latest
    needs: [runner-indexes]
    name: "Runner #${{ matrix.runner-index }}: Run test suite in parallel"
    strategy:
      matrix:
        runner-index: ${{ fromjson(needs.runner-indexes.outputs.json) }}
    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
      - name: Set up Python 3.7.12
        uses: actions/setup-python@v4
        with:
            python-version: "3.7.12"
      - uses: ./.github/actions/update_submodules
      - uses: ./.github/actions/pre_make
      - uses: ./.github/actions/make_init
      - name: Run make develop
        run: |
          make develop
        shell: bash -l -v -e -u -o pipefail {0}
      - name: Install Cypress dependencies
        run: |
          ${SUDO} apt-get install -y xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 jq curl
        shell: bash -l -v -e -u -o pipefail {0}
      # Revisit artifact saving
      # - name: Save Cypress artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: build
      #     if-no-files-found: error
      #     path: build
      - name: Init config
        run: |
          mkdir ~/.streamlit
          MAPBOX_TOKEN=$(curl -sS https://data.streamlit.io/tokens.json | jq -r '.["mapbox-localhost"]')
          echo '[mapbox]' >  ~/.streamlit/config.toml
          echo 'token = "'$MAPBOX_TOKEN'"' >> ~/.streamlit/config.toml
        shell: bash -l -v -e -u -o pipefail {0}
      - name: Init credentials
        run: |
          echo '[general]' >  ~/.streamlit/credentials.toml
          echo 'email = "test@streamlit.io"' >> ~/.streamlit/credentials.toml
        shell: bash -l -v -e -u -o pipefail {0}
      - uses: chaosaffe/split-tests@v1-alpha.1
        id: split-tests
        name: Split tests
        with:
          glob: ./e2e/specs/**/*.js
          split-total: ${{ env.total-runners }}
          split-index: ${{ matrix.runner-index }}
      - run: |
          scripts/run_e2e_tests.py -a ${{ steps.split-tests.outputs.test-suite }}
          'echo "This runner will execute the following tests: ${{ steps.split-tests.outputs.test-suite }}"'


